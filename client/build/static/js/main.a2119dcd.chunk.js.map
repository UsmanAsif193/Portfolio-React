{"version":3,"sources":["Context/DarkMode.js","Components/Common/App-Loader/index.js","App.js","index.js"],"names":["DarkModeContext","createContext","SetDarkModeContext","useDarkMode","useContext","useSetDarkMode","DarkMode","children","useState","window","matchMedia","matches","darkMode","setdarkMode","Provider","value","AppLoader","className","type","color","height","width","Home","React","lazy","App","fallback","ReactDOM","render","document","getElementById"],"mappings":"sOAEMA,EAAkBC,0BAElBC,EAAqBD,0BAEdE,EAAc,WAAQ,OAAOC,qBAAWJ,IAExCK,EAAiB,WAAQ,OAAOD,qBAAWF,IAazCI,IAXE,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAChB,EAAgCC,sBAASC,OAAOC,aAAcD,OAAOC,WAAW,gCAAgCC,UAAhH,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,OACI,cAACb,EAAgBc,SAAjB,CAA0BC,MAAOH,EAAjC,SACI,cAACV,EAAmBY,SAApB,CAA6BC,MAAOF,EAApC,SACKN,Q,8ICSFS,EAlBG,WACd,IAAMJ,EAAWT,cACjB,OACI,8BACI,sBAAKc,UAAU,SAAf,UACI,qBAAKA,UAAWL,EAAW,+BAAiC,cAA5D,qBACA,cAAC,IAAD,CACIK,UAAU,cACVC,KAAK,YACLC,MAAM,UACNC,OAAQ,GACRC,MAAO,WCZrBC,EAAOC,IAAMC,MAAK,kBAAM,sDAafC,MAXf,WACE,IAAMb,EAAWT,cACjB,OACE,qBAAKc,UAAS,wBAAmBL,EAAW,OAAS,SAArD,SACE,cAAC,WAAD,CAAUc,SAAU,cAAC,EAAD,IAApB,SACE,cAACJ,EAAD,SCPRK,IAASC,OACP,cAACtB,EAAA,EAAD,UACE,cAAC,EAAD,MAEFuB,SAASC,eAAe,W","file":"static/js/main.a2119dcd.chunk.js","sourcesContent":["import React, { useState, useContext, createContext } from 'react'\r\n\r\nconst DarkModeContext = createContext()\r\n\r\nconst SetDarkModeContext = createContext()\r\n\r\nexport const useDarkMode = () => { return useContext(DarkModeContext) }\r\n\r\nexport const useSetDarkMode = () => { return useContext(SetDarkModeContext) }\r\n\r\nconst DarkMode = ({ children }) => {\r\n    const [darkMode, setdarkMode] = useState(window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches ? true : false)\r\n    return (\r\n        <DarkModeContext.Provider value={darkMode}>\r\n            <SetDarkModeContext.Provider value={setdarkMode}>\r\n                {children}\r\n            </SetDarkModeContext.Provider>\r\n        </DarkModeContext.Provider>\r\n    )\r\n}\r\n\r\nexport default DarkMode\r\n","import React from 'react'\r\nimport Loader from \"react-loader-spinner\";\r\nimport { useDarkMode } from '../../../Context/DarkMode';\r\nimport './AppLoader.css'\r\n\r\n\r\nconst AppLoader = () => {\r\n    const darkMode = useDarkMode()\r\n    return (\r\n        <div>\r\n            <div className=\"loader\">\r\n                <div className={darkMode ? \"loader-text dark-loader-text\" : \"loader-text\"}>Loading</div>\r\n                <Loader\r\n                    className=\"loader-dots\"\r\n                    type=\"ThreeDots\"\r\n                    color=\"#7918f2\"\r\n                    height={70}\r\n                    width={70}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AppLoader\r\n","import React, { Suspense } from 'react'\r\nimport './App.css';\r\nimport AppLoader from './Components/Common/App-Loader';\r\nimport { useDarkMode } from './Context/DarkMode';\r\n\r\nconst Home = React.lazy(() => import('./Components/Home/index'))\r\n\r\nfunction App() {\r\n  const darkMode = useDarkMode()\r\n  return (\r\n    <div className={`app-container ${darkMode ? \"dark\" : \"light\"}`}>\r\n      <Suspense fallback={<AppLoader />}>\r\n        <Home />\r\n      </Suspense>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport DarkMode from './Context/DarkMode';\r\n\r\nReactDOM.render(\r\n  <DarkMode>\r\n    <App />\r\n  </DarkMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}